type Query {
  company(id: ID!): Company
  job(id: ID!): Job # we don't want any job, we want a specific job, hence passing an id arg
  jobs: [Job] # return an arr of Job objects, each job has multiple fields(id, title, description)
}

type Mutation {
  createJob(input: CreateJobInput): Job # all mutations must return a result like queries.
}

type Company {
  id: ID!
  name: String
  description: String
  jobs: [Job]
}

type Job { # custom type
  id: ID! # exclamation mark means id should never be null, in other words, each object of type Job MUST have an id
  title: String
  company: Company
  description: String
}

input CreateJobInput {
  companyId: ID
  title: String
  description: String
}
